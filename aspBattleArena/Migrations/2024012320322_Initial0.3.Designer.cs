// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using aspBattleArena.Data;

#nullable disable

namespace aspBattleArena.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230221201322_Initial0.3")]
    partial class Initial03
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.3");

            modelBuilder.Entity("aspBattleArena.Models.Base", b =>
                {
                    b.Property<int>("BaseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OrganizationOgranizationId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BaseID");

                    b.HasIndex("OrganizationOgranizationId");

                    b.ToTable("Bases");
                });

            modelBuilder.Entity("aspBattleArena.Models.Boss", b =>
                {
                    b.Property<int>("BossId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Nationality")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("BossId");

                    b.ToTable("Bosses");
                });

            modelBuilder.Entity("aspBattleArena.Models.GangMember", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Endurance")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Intelligence")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Luck")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Nationality")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrganizationOgranizationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Strength")
                        .HasColumnType("INTEGER");

                    b.HasKey("MemberId");

                    b.HasIndex("OrganizationOgranizationId");

                    b.ToTable("GangMembers");
                });

            modelBuilder.Entity("aspBattleArena.Models.Organization", b =>
                {
                    b.Property<int>("OgranizationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CountryOfOrigin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("OgranizationId");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("aspBattleArena.Models.Base", b =>
                {
                    b.HasOne("aspBattleArena.Models.Organization", "Organization")
                        .WithMany("Bases")
                        .HasForeignKey("OrganizationOgranizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("aspBattleArena.Models.GangMember", b =>
                {
                    b.HasOne("aspBattleArena.Models.Organization", "Organization")
                        .WithMany("Members")
                        .HasForeignKey("OrganizationOgranizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("aspBattleArena.Models.Organization", b =>
                {
                    b.HasOne("aspBattleArena.Models.Boss", "Boss")
                        .WithOne("Organization")
                        .HasForeignKey("aspBattleArena.Models.Organization", "OgranizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Boss");
                });

            modelBuilder.Entity("aspBattleArena.Models.Boss", b =>
                {
                    b.Navigation("Organization")
                        .IsRequired();
                });

            modelBuilder.Entity("aspBattleArena.Models.Organization", b =>
                {
                    b.Navigation("Bases");

                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
